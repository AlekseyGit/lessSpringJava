<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    
    <!-- Uncomment and add your base-package here:
         <context:component-scan
            base-package="org.springframework.samples.service"/>  -->
            
     <bean id="duke" class="classimpl.Juggler" >
     	<constructor-arg value="15"></constructor-arg>
     </bean>
     
     <bean id="sonnet29" class="classimpl.Sonnet29"></bean>
     
     <bean id="poeticDuke" class="classimpl.PoeticJuggler">
     	<constructor-arg value="15"></constructor-arg>
     	<constructor-arg ref="sonnet29"></constructor-arg>
     </bean>
     
     <bean id="theStage" class="classimpl.Stage" factory-method="getInstance"></bean>

</beans>



<!-- глава 2.1.4 https://www.assembla.com/spaces/gorsv/documents/aZ5WPupOSr457dacwqEsg8/download/aZ5WPupOSr457dacwqEsg8
aop - Предоставляет элементы для объявления аспектов и для
автоматического проксирования классов, объявляемых
аспектами с помощью аннотации @AspectJ 
######################################################
beans - Пространство имен с основными элементами, позволяющими
объявлять компоненты и определять связи между ними
######################################################
context - Содержит элементы для конфигурирования контекста
приложения Spring, включая возможность автоматического
определения и автоматического связывания компонентов,
а также внедрения объектов, которые не управляются
фреймворком Spring непосредственно 
######################################################
jee - Обеспечивает интеграцию с такими Java EE API, как JNDI и EJB
######################################################
jms - Предоставляет элементы для объявления POJO, управляемых
сообщениями
######################################################
lang - Позволяет объявлять компоненты, реализованные как
сценарии на языках Groovy, JRuby и BeanShell
######################################################
mvc - Включает такие возможности Spring MVC, как аннотирован-
ные контроллеры, контроллеры представлений и обработчики
######################################################
oxm - Поддерживает возможность настройки механизма
отображения объектов в XML
######################################################
tx - Содержит элементы настройки декларативных транзакций
######################################################
util - Набор различных вспомогательных элементов, включающий
возможность объявления коллекций как компонентов
и поддержку элементов-заполнителей свойств
 -->